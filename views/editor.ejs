<% include header %>
<script src="https://unpkg.com/wangeditor/dist/wangEditor.min.js"></script>
<script src="https://unpkg.com/i18next/dist/umd/i18next.js"></script>
<% include nav %>

    
    <div class="cantainer row justify-content-between" style="padding-top: 20px;">
    <div class="col-8">
        <input type="text" style="border: 1px solid #ccc;" class="form-control" id="title" placeholder="Title">
    </div>
    <div class="input-group col-4" >
        <div class="input-group-prepend" >
          <label class="input-group-text" style="border: 1px solid #ccc;" for="inputGroupSelect01">Catagory</label>
        </div>
        <select class="custom-select" style="border: 1px solid #ccc;" id="inputGroupSelect01">
            <option selected>Choose...</option>
            <option value="culture">Art and Culture</option>
            <option value="event">Events & Review</option>
            <option value="how">How to</option>
            <option value="opportunity">Opportunity</option>
            <option value="other">Other</option>
        </select>
      </div>

    

    </div>
    <p></p>
    <div id="editor">
        <div id="toolbar-container" style="border: 1px solid #ccc; border-radius: 225px 25px 25px 25px/25px 25px 25px 225px;" class="toolbar"></div>
        <p></p>
        <div id="text-container" style="border: 1px solid #ccc; min-height: 300px; border-radius: 15px 15px 15px 15px;" class="text"></div>
    </div>
    <p></p>
    <button style=" float: right;margin:10px 5% 10px 0;"class="btn btn-info">Submit</button>

</div>
<script>
    const E = window.wangEditor
    const editor = new E('#toolbar-container', '#text-container')
    editor.config.zIndex = 500
    editor.config.placeholder = 'Share your knowledge or insight!'
    editor.config.lang = "en"
    editor.i18next = window.i18next
    editor.config.menus = [
        'head',
        'bold',
        'fontSize',
        'italic',
        'underline',
        'strikeThrough',
        'indent',
        'lineHeight',
        'foreColor',
        'backColor',
        'link',
        'list',
        'justify',
        'quote',
        'emoticon',
        'image',
        'video',
        'splitLine',
        'undo',
        'redo',
    ]
    
    editor.config.uploadImgServer = "/upload-img"
    editor.config.uploadImgShowBase64 = true
    editor.config.showLinkImg = false
    editor.customConfig.uploadFileName = 'mypic'
    editor.customConfig.uploadImgHeaders = {
  'authorization': 'Bearer '+localStorage.token,
  'enctype':'multipart/form-data'
}

    editor.customConfig.uploadImgHooks = {
            success: function (xhr, editor, result) {
                console.log('upload success insert success')
            },
            fail: function (xhr, editor, result) {
                console.log('upload success insert failed')
            },
            error: function (xhr, editor) {
                console.log('upload error')
            },
            timeout: function (xhr, editor) {
                console.log('timeout')
            },
            customInsert: function (insertImg, result, editor) {
                console.log(' upload callback');
                var url = result.url[0];
                insertImg(url)
            }
        };

    editor.config.customAlert = function () {
        swal('Ooops', 'Uploading Failed', 'error')
    }
    editor.config.uploadImgParamsWithUrl = true
    editor.config.uploadImgTimeout = 5 * 1000
    editor.create()

    
    
</script>
</body>

</html>